{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83d\udce7 Introduction to SDK","text":"<p>Welcome to the Mail.tm Stack Development Kit, designed to enhance your experience with the renowned temporary email service, Mail.tm. Here's why you'll find it indispensable:</p>"},{"location":"#enhanced-integration","title":"Enhanced Integration","text":"<p>This kit streamlines interactions with Mail.tm's API, empowering you to seamlessly integrate its features into your applications. Whether you're automating email workflows or incorporating temporary email capabilities, this SDK has you covered.</p> <ul> <li>The library provides a way to reduce the memory load. </li> <li>It uses hashmaps for caching the data required to compare and dispatch data related events. </li> <li>The live system works on a routed method of pooling with API which makes it easy to interact with client.</li> </ul>"},{"location":"#comprehensive-documentation","title":"Comprehensive Documentation","text":"<p>Methods are constructed using the documentation, available here. The whole documentation is relying on what the API documentation is, apart from the attributes an instance of any JSON object represents. Rather than manually spliiting the data and then patching their values under a class, this library directly uses Structs, to do it. </p> <p>Similar to an example class like this all the objects, that is, the <code>abc</code>s are made in this library. <pre><code>class Account(x.Struct):\n    account_id: Optional[str]\n    another_field: Optional[str]\n    some_more_field: Optional[str]\n</code></pre></p> <p>Although the documentation has it's own essential importance. &gt;The docstrings do contain all the necessary information one &gt;would need to know about.</p>"},{"location":"#adherence-to-terms","title":"Adherence to Terms","text":"<p>Rest assured, this SDK complies fully with Mail.tm's terms of usage, ensuring a seamless and secure experience for both developers and users. By respecting Mail.tm's conditions, we prioritize the integrity and reliability of the service by this kit.</p>"},{"location":"#assurance-of-safety","title":"Assurance of safety","text":"<p>This repository prioritizes your safety. With frequent updates to dependencies, we ensure that no vulnerable dependencies compromise your security. Count on us for a secure and reliable experience.</p> <p>Experience the power and convenience of Mail.tm with our Stack Development Kit - your gateway to efficient and reliable temporary email solutions.</p>"},{"location":"home/client/","title":"Choosing the Ideal Client for Your Project","text":"<p>This guide will help you determine which of the three main clients is best suited for your use case.</p>"},{"location":"home/client/#your-requirements","title":"\ud83d\udcad Your Requirements","text":"<p>Based on the specific needs of your project, the library offers three primary clients to choose from:</p>"},{"location":"home/client/#asyncmail","title":"\ud83d\udce7 AsyncMail","text":"<p>In scenarios where asynchronous operations are essential, such as developing a Discord bot, the AsyncMail client is ideal.</p> <ul> <li>\ud83d\ude80 AsyncMail allows you to execute operations without blocking other tasks, ensuring smooth performance and responsiveness.</li> <li>\ud83d\ude80 This client is perfect for situations where avoiding IO bottlenecks is necessary.</li> </ul>"},{"location":"home/client/#syncmail","title":"\ud83d\udce7 SyncMail","text":"<p>SyncMail is designed for situations where synchronous operation is preferred or required.</p> <ul> <li>\ud83d\ude80 SyncMail provides a straightforward synchronous interface, making it a great choice for users who are more comfortable with synchronous programming paradigms or who do not require the complexity of asynchronous operations.</li> <li>\ud83d\ude80 In SyncMail, operations are executed sequentially, one after the other, rather than concurrently.</li> <li>\ud83d\ude80 This approach can be beneficial in certain contexts where simplicity or ease of understanding is prioritized over performance gains from asynchronous execution.</li> </ul>"},{"location":"home/client/#pullers","title":"\ud83d\udceb Pullers","text":"<p>Pullers are components within a system that retrieve data or messages from a source in a controlled and efficient manner. </p> <ul> <li>\ud83d\ude80 Pullers typically function by periodically querying a source for new data or messages, pulling them into the system for processing. </li> <li>\ud83d\ude80 This approach is commonly used in scenarios where the rate of data production varies, or where it is impractical to push data to all consumers simultaneously.</li> <li>\ud83d\ude80 This approach allows users to have complete control over the flow of information in a controlled and efficient manner, without having to establish a dedicated session.</li> </ul>"},{"location":"home/client/#stellar-feature-custom-mailserver","title":"\u2b50 Stellar Feature - Custom MailServer","text":"<p>In addition to the various clients, this SDK offers a standout feature that is not officially supported by the website but has been meticulously reproduced to function seamlessly. This feature involves a pooling-based server, which continually monitors the API for new events at one-second intervals. Upon detecting a difference, it dispatches the corresponding event, enabling dynamic responses to incoming messages.</p> <p>We'll discuss this feature in more detail in the <code>Server</code> documentation.</p>"},{"location":"home/future/","title":"Future Plans","text":"<p>Until the server-side implementation of the temporary email service is updated, no changes will be made without explicit announcement. If any changes are introduced, they will be immediately disclosed on this repository's page.</p>"},{"location":"references/abc/","title":"ABCs","text":"How do we use this ? <p>We utilize this abstract base class to define a structured way of representing and interacting with data objects. By defining classes that inherit from these ABCs, we can create objects that not only provide a clear understanding of their contents, but also enable convenient and efficient data manipulation and traversal.</p>"},{"location":"references/abc/#general-objects","title":"General Objects","text":"<ul> <li>These abstract base classes (ABCs) serve as a foundation for the modal classes, providing a structured way to interact with data objects.</li> <li>While they won't be directly used for data manipulation, they will be inherited by the modal classes, which will then utilize their functionality to provide a clear understanding of their contents and enable convenient and efficient data manipulation and traversal.</li> </ul> <p>This module provides the following classes for type-safe and msgspec-based handling of the Mail.tm API data types.</p> <ul> <li><code>MessageFrom</code>: Represents a data class containing details of messages.</li> <li><code>MessageTo</code>: Represents a data class containing details of recipients.</li> <li><code>MessageAttachment</code>: Represents a data class containing details of attachments.</li> <li><code>ViewDetails</code>: Represents a data class containing details of search results.</li> <li><code>ViewSearch</code>: Represents a data class containing details of search queries.</li> </ul> <p>These classes are designed to be used with the 'msgspec' library to facilitate quick and efficient data serialization and deserialization.</p>"},{"location":"references/abc/#mailtm.abc.generic.MessageFrom","title":"MessageFrom","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>Represents a data class containing details of messages.</p>"},{"location":"references/abc/#mailtm.abc.generic.MessageFrom.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = msgspec.field(name='name')\n</code></pre> <p>Name of the <code>Account</code> by which the <code>Message</code> was sent.</p> RETURNS DESCRIPTION <code>name</code> <p>Name of the account message is sent from.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageFrom.address","title":"address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address: str = msgspec.field(name='address')\n</code></pre> <p>Email address of the <code>Account</code> by which the <code>Message</code> was sent.</p> RETURNS DESCRIPTION <code>address</code> <p>Email address of the account message is sent from.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageTo","title":"MessageTo","text":"<p>             Bases: <code>msgspec.Struct</code></p>"},{"location":"references/abc/#mailtm.abc.generic.MessageTo.name","title":"name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>name: str = msgspec.field(name='name')\n</code></pre> <p>Name of the <code>Account</code> to which the <code>Message</code> was sent.</p> RETURNS DESCRIPTION <code>name</code> <p>Name of the account message is sent to.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageTo.address","title":"address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address: str = msgspec.field(name='address')\n</code></pre> <p>Email address of the <code>Account</code> to which the <code>Message</code> was sent.</p> RETURNS DESCRIPTION <code>address</code> <p>Email address of the account message is sent to.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment","title":"MessageAttachment","text":"<p>             Bases: <code>msgspec.Struct</code></p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = msgspec.field(name='id')\n</code></pre> <p>ID of the message attachment.</p> RETURNS DESCRIPTION <code>id</code> <p>ID of the message attachment.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.filename","title":"filename  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>filename: str = msgspec.field(name='filename')\n</code></pre> <p>The name of the attachment file.</p> RETURNS DESCRIPTION <code>filename</code> <p>The name of the attachment file.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.content_type","title":"content_type  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>content_type: str = msgspec.field(name='contentType')\n</code></pre> <p>The MIME type of the attachment.</p> RETURNS DESCRIPTION <code>content_type</code> <p>The MIME type of the attachment.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.disposition","title":"disposition  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>disposition: str = msgspec.field(name='disposition')\n</code></pre> <p>The Content-Disposition header of the attachment.</p> RETURNS DESCRIPTION <code>disposition</code> <p>The Content-Disposition header of the attachment.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.transfer_encoding","title":"transfer_encoding  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>transfer_encoding: str = msgspec.field(\n    name=\"transferEncoding\"\n)\n</code></pre> <p>The Transfer-Encoding header of the attachment.</p> RETURNS DESCRIPTION <code>transfer_encoding</code> <p>The Transfer-Encoding header of the attachment.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.related","title":"related  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>related: bool = msgspec.field(name='related')\n</code></pre> <p>Whether the attachment is related to the main body of the message.</p> RETURNS DESCRIPTION <code>related</code> <p>Whether the attachment is related to the main body of the message.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.size","title":"size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>size: int = msgspec.field(name='size')\n</code></pre> <p>The size of the attachment in bytes.</p> RETURNS DESCRIPTION <code>size</code> <p>The size of the attachment in bytes.</p> <p> TYPE: <code>int</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.MessageAttachment.download_url","title":"download_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url: str = msgspec.field(name='downloadUrl')\n</code></pre> <p>The URL where the attachment can be downloaded from.</p> RETURNS DESCRIPTION <code>download_url</code> <p>The URL where the attachment can be downloaded from.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.Token","title":"Token","text":"<p>             Bases: <code>msgspec.Struct</code></p>"},{"location":"references/abc/#mailtm.abc.generic.Token.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: str = msgspec.field(name='id')\n</code></pre> <p>ID of the account.</p> RETURNS DESCRIPTION <code>id</code> <p>ID of the account.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.Token.token","title":"token  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>token: str = msgspec.field(name='token')\n</code></pre> <p>Token of the account.</p> RETURNS DESCRIPTION <code>token</code> <p>Token of the account.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewDetails","title":"ViewDetails","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>Struct representing the details of a view.</p>"},{"location":"references/abc/#mailtm.abc.generic.ViewDetails.first","title":"first  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>first: str = msgspec.field(name='hydra:first')\n</code></pre> <p>The URL of the first page in the view.</p> RETURNS DESCRIPTION <code>first</code> <p>The URL of the first page in the view.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewDetails.last","title":"last  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>last: str = msgspec.field(name='hydra:last')\n</code></pre> <p>The URL of the last page in the view.</p> RETURNS DESCRIPTION <code>last</code> <p>The URL of the last page in the view.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewDetails.previous","title":"previous  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>previous: str = msgspec.field(name='hydra:previous')\n</code></pre> <p>The URL of the previous page in the view.</p> RETURNS DESCRIPTION <code>previous</code> <p>The URL of the previous page in the view.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewDetails.next","title":"next  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>next: str = msgspec.field(name='hydra:next')\n</code></pre> <p>The URL of the next page in the view.</p> RETURNS DESCRIPTION <code>next</code> <p>The URL of the next page in the view.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewMapping","title":"ViewMapping","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>Struct representing a mapping between a variable and a property.</p>"},{"location":"references/abc/#mailtm.abc.generic.ViewMapping.variable","title":"variable  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>variable: str = msgspec.field(name='variable')\n</code></pre> <p>The variable of the mapping.</p> RETURNS DESCRIPTION <code>variable</code> <p>The variable of the mapping.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewMapping.property","title":"property  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>property: str = msgspec.field(name='property')\n</code></pre> <p>The property of the mapping.</p> RETURNS DESCRIPTION <code>property</code> <p>The property of the mapping.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewMapping.required","title":"required  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>required: bool = msgspec.field(name='required')\n</code></pre> <p>Whether the mapping is required.</p> RETURNS DESCRIPTION <code>required</code> <p>Whether the mapping is required.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewSearch","title":"ViewSearch","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>A view search system.</p>"},{"location":"references/abc/#mailtm.abc.generic.ViewSearch.template","title":"template  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>template: str = msgspec.field(name='hydra:template')\n</code></pre> <p>The URL template of the view.</p> RETURNS DESCRIPTION <code>template</code> <p>The URL template of the view.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewSearch.variable_representation","title":"variable_representation  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>variable_representation: str = msgspec.field(\n    name=\"hydra:variableRepresentation\"\n)\n</code></pre> <p>The representation of variables in the view.</p> RETURNS DESCRIPTION <code>variable_representation</code> <p>The representation of variables in the view.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.generic.ViewSearch.mappings","title":"mappings  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>mappings: t.List[ViewMapping] = msgspec.field(\n    name=\"hydra:mapping\"\n)\n</code></pre> <p>A list of mappings for the view.</p> RETURNS DESCRIPTION <code>mappings</code> <p>A list of mappings for the view.</p> <p> TYPE: <code>List[ViewMapping]</code> </p>"},{"location":"references/abc/#modal-objects","title":"Modal Objects","text":"<ul> <li>Modal objects contain the classes that the user directly interacts with while using the SDK.</li> <li>These modals contain the data objects that the user interacts with while using the SDK. </li> </ul>"},{"location":"references/abc/#mailtm.abc.modals.Domain","title":"Domain","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>The domain of the email account.</p>"},{"location":"references/abc/#mailtm.abc.modals.Domain.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: t.Optional[str] = msgspec.field(\n    name=\"id\", default=None\n)\n</code></pre> <p><code>Not documented</code>: ID of the interaction.</p> RETURNS DESCRIPTION <code>id</code> <p>ID of the interaction.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Domain.domain_name","title":"domain_name  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domain_name: t.Optional[str] = msgspec.field(\n    name=\"domain\", default=None\n)\n</code></pre> <p>Name of the domain provided by mail.tm</p> RETURNS DESCRIPTION <code>domain</code> <p>Name of the domain provided by mail.tm</p> <p> TYPE: <code>str</code> </p> <p>Examples:</p> <p>@gmail.com, @goster.com</p>"},{"location":"references/abc/#mailtm.abc.modals.Domain.is_active","title":"is_active  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_active: t.Optional[bool] = msgspec.field(\n    name=\"isActive\", default=None\n)\n</code></pre> <p>If the domain is still active.</p> RETURNS DESCRIPTION <code>is_active</code> <p>If the domain is still active.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Domain.is_private","title":"is_private  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_private: t.Optional[bool] = msgspec.field(\n    name=\"isPrivate\", default=None\n)\n</code></pre> <p>If the domain is private. Private domains are not visible to the public.</p> RETURNS DESCRIPTION <code>is_private</code> <p>If the domain is private. Private domains are not visible to the public.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Domain.created_at","title":"created_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_at: t.Optional[datetime.datetime] = msgspec.field(\n    name=\"createdAt\", default=None\n)\n</code></pre> <p>The datetime object of creation date of the domain.</p> RETURNS DESCRIPTION <code>created_at</code> <p>The datetime object of creation date of the domain.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Domain.updated_at","title":"updated_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>updated_at: t.Optional[datetime.datetime] = msgspec.field(\n    name=\"updatedAt\", default=None\n)\n</code></pre> <p>The datetime object of update date of the domain from the latest point of reference.</p> RETURNS DESCRIPTION <code>updated_at</code> <p>The datetime object of update date of the domain from the latest point of reference.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account","title":"Account","text":"<p>             Bases: <code>msgspec.Struct</code></p>"},{"location":"references/abc/#mailtm.abc.modals.Account.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: t.Optional[str] = msgspec.field(\n    name=\"id\", default=None\n)\n</code></pre> <p><code>Not documented</code>: ID of the account.</p> RETURNS DESCRIPTION <code>id</code> <p>ID of the account.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.address","title":"address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>address: t.Optional[str] = msgspec.field(\n    name=\"address\", default=None\n)\n</code></pre> <p>Email address of the account.</p> RETURNS DESCRIPTION <code>address</code> <p>Email address of the account.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.quota","title":"quota  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>quota: t.Optional[int] = msgspec.field(\n    name=\"quota\", default=None\n)\n</code></pre> <p>The quota of the account.</p> RETURNS DESCRIPTION <code>quota</code> <p>The quota of the account.</p> <p> TYPE: <code>int</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.used","title":"used  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>used: t.Optional[int] = msgspec.field(\n    name=\"used\", default=None\n)\n</code></pre> <p>The amount of quota used by the account.</p> RETURNS DESCRIPTION <code>used</code> <p>The amount of quota used by the account.</p> <p> TYPE: <code>int</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.is_disabled","title":"is_disabled  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_disabled: t.Optional[bool] = msgspec.field(\n    name=\"isDisabled\", default=None\n)\n</code></pre> <p>If the account is disabled.</p> RETURNS DESCRIPTION <code>is_disabled</code> <p>If the account is disabled.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.is_deleted","title":"is_deleted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_deleted: t.Optional[bool] = msgspec.field(\n    name=\"isDeleted\", default=None\n)\n</code></pre> <p>If the account is deleted.</p> RETURNS DESCRIPTION <code>is_deleted</code> <p>If the account is deleted.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.created_at","title":"created_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_at: t.Optional[datetime.datetime] = msgspec.field(\n    name=\"createdAt\", default=None\n)\n</code></pre> <p>The datetime object of creation date of the account.</p> RETURNS DESCRIPTION <code>created_at</code> <p>The datetime object of creation date of the account.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Account.updated_at","title":"updated_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>updated_at: t.Optional[datetime.datetime] = msgspec.field(\n    name=\"updatedAt\", default=None\n)\n</code></pre> <p>The datetime object of update date of the account from the latest point of reference.</p> RETURNS DESCRIPTION <code>updated_at</code> <p>The datetime object of update date of the account from the latest point of reference.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message","title":"Message","text":"<p>             Bases: <code>msgspec.Struct</code></p>"},{"location":"references/abc/#mailtm.abc.modals.Message.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: t.Optional[str] = msgspec.field(\n    name=\"id\", default=None\n)\n</code></pre> <p>ID of the message.</p> RETURNS DESCRIPTION <code>id</code> <p>ID of the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.account_id","title":"account_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_id: t.Optional[str] = msgspec.field(\n    name=\"accountId\", default=None\n)\n</code></pre> <p>ID of the account to which the message belongs.</p> RETURNS DESCRIPTION <code>account_id</code> <p>ID of the account to which the message belongs.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.message_id","title":"message_id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_id: t.Optional[str] = msgspec.field(\n    name=\"msgid\", default=None\n)\n</code></pre> <p>The ID associated with the message.</p> RETURNS DESCRIPTION <code>message_id</code> <p>Message ID.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.message_from","title":"message_from  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_from: t.Optional[MessageFrom] = msgspec.field(\n    name=\"from\", default=None\n)\n</code></pre> <p>Details of the sender of the message.</p> RETURNS DESCRIPTION <code>message_from</code> <p>Details of the sender of the message.</p> <p> TYPE: <code>MessageFrom</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.message_to","title":"message_to  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>message_to: t.Optional[t.List[MessageTo]] = msgspec.field(\n    name=\"to\", default=None\n)\n</code></pre> <p>Details of the recipients of the message.</p> RETURNS DESCRIPTION <code>message_to</code> <p>Details of the recipients of the message.</p> <p> TYPE: <code>MessageTo</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.subject","title":"subject  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>subject: t.Optional[str] = msgspec.field(\n    name=\"subject\", default=None\n)\n</code></pre> <p>Subject of the message.</p> RETURNS DESCRIPTION <code>subject</code> <p>Subject of the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.seen","title":"seen  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>seen: t.Optional[bool] = msgspec.field(\n    name=\"seen\", default=None\n)\n</code></pre> <p>If the message has been seen by the recipient.</p> RETURNS DESCRIPTION <code>seen</code> <p>If the message has been seen by the recipient.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.is_deleted","title":"is_deleted  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>is_deleted: t.Optional[bool] = msgspec.field(\n    name=\"isDeleted\", default=None\n)\n</code></pre> <p>If the message is deleted.</p> RETURNS DESCRIPTION <code>is_deleted</code> <p>If the message is deleted.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.html","title":"html  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>html: t.Optional[t.List[str]] = msgspec.field(\n    name=\"html\", default=None\n)\n</code></pre> <p>HTML content of the message.</p> RETURNS DESCRIPTION <code>html</code> <p>HTML content of the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.has_attachments","title":"has_attachments  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>has_attachments: t.Optional[bool] = msgspec.field(\n    name=\"hasAttachments\", default=None\n)\n</code></pre> <p>If the message has attachments.</p> RETURNS DESCRIPTION <code>has_attachments</code> <p>If the message has attachments.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.attachments","title":"attachments  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>attachments: t.Optional[t.List[MessageAttachment]] = (\n    msgspec.field(name=\"attachments\", default=None)\n)\n</code></pre> <p>Attachments associated with the message.</p> RETURNS DESCRIPTION <code>attachments</code> <p>Attachments associated with the message.</p> <p> TYPE: <code>MessageAttachment</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.size","title":"size  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>size: t.Optional[int] = msgspec.field(\n    name=\"size\", default=None\n)\n</code></pre> <p>Size of the message in bytes.</p> RETURNS DESCRIPTION <code>size</code> <p>Size of the message in bytes.</p> <p> TYPE: <code>int</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.downloadUrl","title":"downloadUrl  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>downloadUrl: t.Optional[str] = msgspec.field(\n    name=\"downloadUrl\", default=None\n)\n</code></pre> <p>URL to download the message.</p> RETURNS DESCRIPTION <code>downloadUrl</code> <p>URL to download the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.created_at","title":"created_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>created_at: t.Optional[datetime.datetime] = msgspec.field(\n    name=\"createdAt\", default=None\n)\n</code></pre> <p>Date and time of creation of the message.</p> RETURNS DESCRIPTION <code>created_at</code> <p>Date and time of creation of the message.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.updated_at","title":"updated_at  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>updated_at: t.Optional[datetime.datetime] = msgspec.field(\n    name=\"updatedAt\", default=None\n)\n</code></pre> <p>Date and time of last update of the message.</p> RETURNS DESCRIPTION <code>updated_at</code> <p>Date and time of last update of the message.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.cc","title":"cc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>cc: t.Optional[t.List[str]] = msgspec.field(\n    name=\"cc\", default=None\n)\n</code></pre> <p>Carbon Copy (CC) recipients of the message.</p> RETURNS DESCRIPTION <code>cc</code> <p>Carbon Copy (CC) recipients of the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.bcc","title":"bcc  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>bcc: t.Optional[t.List[str]] = msgspec.field(\n    name=\"bcc\", default=None\n)\n</code></pre> <p>Blind Carbon Copy (BCC) recipients of the message.</p> RETURNS DESCRIPTION <code>bcc</code> <p>Blind Carbon Copy (BCC) recipients of the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.flagged","title":"flagged  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>flagged: t.Optional[bool] = msgspec.field(\n    name=\"flagged\", default=None\n)\n</code></pre> <p>If the message is flagged by the recipient.</p> RETURNS DESCRIPTION <code>flagged</code> <p>If the message is flagged by the recipient.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.verifications","title":"verifications  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>verifications: t.Optional[t.List[str]] = msgspec.field(\n    name=\"verifications\", default=None\n)\n</code></pre> <p>Verifications associated with the message.</p> RETURNS DESCRIPTION <code>verifications</code> <p>Verifications associated with the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.retention_date","title":"retention_date  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>retention_date: t.Optional[datetime.datetime] = (\n    msgspec.field(name=\"retentionDate\", default=None)\n)\n</code></pre> <p>Date of retention for the message.</p> RETURNS DESCRIPTION <code>retention_date</code> <p>Date of retention for the message.</p> <p> TYPE: <code>datetime</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.retention","title":"retention  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>retention: t.Optional[bool] = msgspec.field(\n    name=\"retention\", default=None\n)\n</code></pre> <p>If the message is subject to retention.</p> RETURNS DESCRIPTION <code>retention</code> <p>If the message is subject to retention.</p> <p> TYPE: <code>bool</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Message.text","title":"text  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>text: t.Optional[str] = msgspec.field(\n    name=\"text\", default=None\n)\n</code></pre> <p>Plain text content of the message.</p> RETURNS DESCRIPTION <code>text</code> <p>Plain text content of the message.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Source","title":"Source","text":""},{"location":"references/abc/#mailtm.abc.modals.Source.id","title":"id  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>id: t.Optional[str] = msgspec.field(\n    name=\"id\", default=None\n)\n</code></pre> <p>The id attribute of the Source.</p> RETURNS DESCRIPTION <code>id</code> <p>The id attribute of the Source.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Source.download_url","title":"download_url  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>download_url: t.Optional[str] = msgspec.field(\n    name=\"downloadUrl\", default=None\n)\n</code></pre> <p>The download URL attribute of the Source.</p> RETURNS DESCRIPTION <code>download_url</code> <p>The download URL attribute of the Source.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.Source.data","title":"data  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>data: t.Optional[str] = msgspec.field(\n    name=\"data\", default=None\n)\n</code></pre> <p>The data attribute of the Source.</p> RETURNS DESCRIPTION <code>data</code> <p>The data attribute of the Source.</p> <p> TYPE: <code>str</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.MessagePageView","title":"MessagePageView","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>Page view for messages under a page.</p>"},{"location":"references/abc/#mailtm.abc.modals.MessagePageView.messages","title":"messages  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>messages: t.Optional[t.List[Message]] = msgspec.field(\n    name=\"hydra:member\", default=None\n)\n</code></pre> <p>List of messages in the view.</p> RETURNS DESCRIPTION <code>messages</code> <p>List of messages in the view.</p> <p> TYPE: <code>Message</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.MessagePageView.total_items","title":"total_items  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_items: t.Optional[int] = msgspec.field(\n    name=\"hydra:totalItems\", default=None\n)\n</code></pre> <p>Total number of items in the view.</p> RETURNS DESCRIPTION <code>total_items</code> <p>Total number of items in the view.</p> <p> TYPE: <code>int</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.MessagePageView.view_search","title":"view_search  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_search: t.Optional[ViewSearch] = msgspec.field(\n    name=\"hydra:search\", default=None\n)\n</code></pre> <p>Search parameters of the view.</p> RETURNS DESCRIPTION <code>view_search</code> <p>Search parameters of the view.</p> <p> TYPE: <code>ViewSearch</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.MessagePageView.view_details","title":"view_details  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_details: t.Optional[ViewDetails] = msgspec.field(\n    name=\"hydra:view\", default=None\n)\n</code></pre> <p>Details of the view.</p> RETURNS DESCRIPTION <code>view_details</code> <p>Details of the view.</p> <p> TYPE: <code>ViewDetails</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.DomainPageView","title":"DomainPageView","text":"<p>             Bases: <code>msgspec.Struct</code></p> <p>Page view for domains under a page.</p>"},{"location":"references/abc/#mailtm.abc.modals.DomainPageView.domains","title":"domains  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>domains: t.Optional[t.List[Domain]] = msgspec.field(\n    name=\"hydra:member\", default=None\n)\n</code></pre> <p>List of domains in the view.</p> RETURNS DESCRIPTION <code>domains</code> <p>List of domains in the view.</p> <p> TYPE: <code>Domain</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.DomainPageView.total_items","title":"total_items  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>total_items: t.Optional[int] = msgspec.field(\n    name=\"hydra:totalItems\", default=None\n)\n</code></pre> <p>Total number of domains in the view.</p> RETURNS DESCRIPTION <code>total_items</code> <p>Total number of domains in the view.</p> <p> TYPE: <code>int</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.DomainPageView.view_details","title":"view_details  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_details: t.Optional[ViewDetails] = msgspec.field(\n    name=\"hydra:view\", default=None\n)\n</code></pre> <p>Details of the domain view.</p> RETURNS DESCRIPTION <code>view_details</code> <p>Details of the domain view.</p> <p> TYPE: <code>ViewDetails</code> </p>"},{"location":"references/abc/#mailtm.abc.modals.DomainPageView.view_search","title":"view_search  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>view_search: t.Optional[ViewSearch] = msgspec.field(\n    name=\"hydra:search\", default=None\n)\n</code></pre> <p>Search parameters of the domain view.</p> RETURNS DESCRIPTION <code>view_search</code> <p>Search parameters of the domain view.</p> <p> TYPE: <code>ViewSearch</code> </p>"},{"location":"references/async-client/","title":"\u26a1Async Mail","text":"<p>Client used for asynchronous operations using the <code>aiohttp</code> client library. This would work in sessions.</p> <p>Warn</p> <p>After you're finished with a session. Do not forget to close the session yourself by calling <code>close()</code>. This will close the session and it won't eat memory any further.</p>"},{"location":"references/async-client/#x-client","title":"\ud83d\ude80 X-Client","text":"<ul> <li>This module provides an asyncio-based client for the Mail.TM API.</li> <li>It allows to create, delete, and manage accounts, messages, and sources. As well as retrieve information about domains.</li> <li>The API is based on the <code>aiohttp</code> library and uses the <code>msgspec</code> library to decode the JSON responses from the API into Python objects.</li> <li>The client is easy to use and is designed to be used in an asyncio-based application.</li> <li>The API is documented at Mail.tm Documentation</li> </ul> You don't have to worry about: <ul> <li>The client automatically handles errors and exceptions, so you don't have to.</li> <li>The client also handles rate limits, so you don't have to.</li> </ul> You do have to worry about: <ul> <li>The client does not handle connection limits, so you might have to.</li> <li>The client does not handle SSL verification, so you might have to.</li> </ul>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail","title":"AsyncMail","text":"<pre><code>AsyncMail(account_token: t.Optional[Token] = None)\n</code></pre> <p>Asynchronous based client handler for the SDK/library.</p> PARAMETER DESCRIPTION <code>account_token</code> <p>The account token to use for authentication. If not provided, the client will not be authenticated.</p> <p> TYPE: <code>t.Optional[Token]</code> DEFAULT: <code>None</code> </p> <p>Examples:</p> <pre><code>import asyncio\nfrom mailtm import AsyncMail\n\nasync def main():\n    async with AsyncMail() as client:\n        account = await client.get_me()\n        print(account)\n\nasyncio.run(main())\n</code></pre>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_me","title":"get_me  <code>async</code>","text":"<pre><code>get_me() -&gt; t.Optional[Account]\n</code></pre> <p>Get the user associated with the account token provided to create a session.</p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The user associated with the account token provided to create a session. If not authenticated, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_domains","title":"get_domains  <code>async</code>","text":"<pre><code>get_domains() -&gt; t.Optional[DomainPageView]\n</code></pre> <p>Get a page view of domains available under the account token provided to create a session.</p> RETURNS DESCRIPTION <code>Optional[DomainPageView]</code> <p>A page view of domains available under the account token provided to create a session. If not authenticated, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_domain","title":"get_domain  <code>async</code>","text":"<pre><code>get_domain(domain_id: str) -&gt; t.Optional[Domain]\n</code></pre> <p>Get a specific domain with ID.</p> PARAMETER DESCRIPTION <code>domain_id</code> <p>The ID of the domain to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Domain]</code> <p>The domain with the ID provided. If not found, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_account","title":"get_account  <code>async</code>","text":"<pre><code>get_account(account_id: str) -&gt; t.Optional[Account]\n</code></pre> <p>Get an accnount by it's ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The account with the ID provided. If not found, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.create_account","title":"create_account  <code>async</code>","text":"<pre><code>create_account(\n    address: str, password: str\n) -&gt; t.Optional[Account]\n</code></pre> <p>Create an account.</p> PARAMETER DESCRIPTION <code>address</code> <p>The email address of the new account.</p> <p> TYPE: <code>str</code> </p> <code>password</code> <p>The password for the new account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The newly created account object if successful, None otherwise.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.delete_account","title":"delete_account  <code>async</code>","text":"<pre><code>delete_account(account_id: t.Optional[str] = None) -&gt; None\n</code></pre> <p>Delete an account by it's ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to delete. If not provided, the account token will be used.</p> <p> TYPE: <code>t.Optional[str]</code> DEFAULT: <code>None</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_messages","title":"get_messages  <code>async</code>","text":"<pre><code>get_messages(page: int = 1) -&gt; t.Optional[MessagePageView]\n</code></pre> <p>Get a page view of messages available under the account token provided to create a session.</p> PARAMETER DESCRIPTION <code>page</code> <p>The page number to get. Defaults to 1.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Optional[MessagePageView]</code> <p>A page view of messages available under the account token provided to create a session. If not authenticated, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_message","title":"get_message  <code>async</code>","text":"<pre><code>get_message(message_id: str) -&gt; t.Optional[Message]\n</code></pre> <p>Get a specific message with ID.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Message]</code> <p>The message with the ID provided. If not found, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.delete_message","title":"delete_message  <code>async</code>","text":"<pre><code>delete_message(message_id: str) -&gt; None\n</code></pre> <p>Delete a specific message with ID.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to delete.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.mark_as_seen","title":"mark_as_seen  <code>async</code>","text":"<pre><code>mark_as_seen(message_id: str) -&gt; None\n</code></pre> <p>Flag a message as seen.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to mark as seen.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.get_source","title":"get_source  <code>async</code>","text":"<pre><code>get_source(source_id: str) -&gt; t.Optional[Source]\n</code></pre> <p>Get source by the source ID.</p> PARAMETER DESCRIPTION <code>source_id</code> <p>The ID of the source to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Source]</code> <p>The source with the ID provided. If not found, returns None.</p>"},{"location":"references/async-client/#mailtm.impls.xclient.AsyncMail.close","title":"close  <code>async</code>","text":"<pre><code>close()\n</code></pre> <p>Close the client.</p>"},{"location":"references/errors/","title":"\u26a1Errors you may encounter","text":""},{"location":"references/errors/#defined-errors","title":"\ud83d\ude80  Defined errors","text":""},{"location":"references/errors/#mailtm.core.errors.MissingArgument","title":"MissingArgument","text":"<p>             Bases: <code>Exception</code></p> <p>Bad request 400</p> <p>Something in your payload is missing! Or, the payload isn't there at all.</p>"},{"location":"references/errors/#mailtm.core.errors.AccountTokenInvalid","title":"AccountTokenInvalid","text":"<p>             Bases: <code>Exception</code></p> <p>Unauthorized 401</p> <p>Your token isn't correct (Or the headers hasn't a token at all!). Remember, every request (Except POST /accounts and POST /token) should be authenticated with a Bearer token!</p>"},{"location":"references/errors/#mailtm.core.errors.EntityNotFound","title":"EntityNotFound","text":"<p>             Bases: <code>Exception</code></p> <p>Not found 404</p> <p>You're trying to access an account that doesn't exist? Or maybe reading a non-existing message? Go check that!</p>"},{"location":"references/errors/#mailtm.core.errors.MethodNotAllowed","title":"MethodNotAllowed","text":"<p>             Bases: <code>Exception</code></p> <p>Method not allowed 405</p> <p>Maybe you're trying to GET a /token or POST a /messages. Check the path you're trying to make a request to and check if the method is the correct one.</p>"},{"location":"references/errors/#mailtm.core.errors.RefusedToProcess","title":"RefusedToProcess","text":"<p>             Bases: <code>Exception</code></p> <p>I'm a teapot 418</p> <p>Who knows? Maybe the server becomes a teapot!</p>"},{"location":"references/errors/#mailtm.core.errors.EntityNotProcessable","title":"EntityNotProcessable","text":"<p>             Bases: <code>Exception</code></p> <p>Unprocessable entity 422</p> <p>Something went wrong on your payload. Like, the username of the address while creating the account isn't long enough, or, the account's domain isn't correct. Things like that.</p>"},{"location":"references/errors/#mailtm.core.errors.RatelimitError","title":"RatelimitError","text":"<p>             Bases: <code>Exception</code></p> <p>Too many requests 429</p> <p>You exceeded the limit of 8 requests per second! Try delaying the request by one second!</p>"},{"location":"references/errors/#undefined-error","title":"\ud83d\ude80 Undefined error","text":"<p>This might raise a normal exception with a string of an error. These are the errors related with internal libraries that the SDK uses.</p>"},{"location":"references/methods/","title":"\ud83d\ude80 Methods used in API calls.","text":"<p>This module contains classes representing different methods available in the Mail.tm webservice. Each class represents a set of related methods. The classes are used to construct method calls to the API of Mail.tm and make requests to their server.</p>"},{"location":"references/methods/#mailtm.core.methods.DomainMethods","title":"DomainMethods  <code>dataclass</code>","text":"<pre><code>DomainMethods(\n    GET_ALL_DOMAINS=\"domains\",\n    GET_DOMAIN_BY_ID=\"domains/{id}\",\n)\n</code></pre> <p>Represents methods related to domains in Mail.tm webservice.</p>"},{"location":"references/methods/#mailtm.core.methods.DomainMethods.GET_ALL_DOMAINS","title":"GET_ALL_DOMAINS  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_ALL_DOMAINS = 'domains'\n</code></pre> <p>Retrieves all domains.</p>"},{"location":"references/methods/#mailtm.core.methods.DomainMethods.GET_DOMAIN_BY_ID","title":"GET_DOMAIN_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_DOMAIN_BY_ID = 'domains/{id}'\n</code></pre> <p>Retrieves a domain by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.AccountMethods","title":"AccountMethods  <code>dataclass</code>","text":"<pre><code>AccountMethods(\n    CREATE_ACCOUNT=\"accounts\",\n    GET_ACCOUNT_BY_ID=\"accounts/{id}\",\n    DELETE_ACCOUNT_BY_ID=\"accounts/{id}\",\n    GET_ME=\"me\",\n    GET_ACCOUNT_TOKEN=\"token\",\n)\n</code></pre> <p>Represents methods related to accounts in Mail.tm webservice.</p>"},{"location":"references/methods/#mailtm.core.methods.AccountMethods.CREATE_ACCOUNT","title":"CREATE_ACCOUNT  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>CREATE_ACCOUNT = 'accounts'\n</code></pre> <p>Creates a new account.</p>"},{"location":"references/methods/#mailtm.core.methods.AccountMethods.GET_ACCOUNT_BY_ID","title":"GET_ACCOUNT_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_ACCOUNT_BY_ID = 'accounts/{id}'\n</code></pre> <p>Retrieves an account by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.AccountMethods.DELETE_ACCOUNT_BY_ID","title":"DELETE_ACCOUNT_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DELETE_ACCOUNT_BY_ID = 'accounts/{id}'\n</code></pre> <p>Deletes an account by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.AccountMethods.GET_ME","title":"GET_ME  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_ME = 'me'\n</code></pre> <p>Retrieves the current logged in account.</p>"},{"location":"references/methods/#mailtm.core.methods.AccountMethods.GET_ACCOUNT_TOKEN","title":"GET_ACCOUNT_TOKEN  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_ACCOUNT_TOKEN = 'token'\n</code></pre> <p>Retrieves the token of the account.</p>"},{"location":"references/methods/#mailtm.core.methods.MessageMethods","title":"MessageMethods  <code>dataclass</code>","text":"<pre><code>MessageMethods(\n    GET_ALL_MESSAGES=\"messages\",\n    GET_MESSAGE_BY_ID=\"messages/{id}\",\n    DELETE_MESSAGE_BY_ID=\"messages/{id}\",\n    PATCH_MESSAGE_BY_ID=\"messages/{id}\",\n    GET_SOURCES_BY_ID=\"sources/{id}\",\n)\n</code></pre> <p>Represents methods related to messages in Mail.tm webservice.</p>"},{"location":"references/methods/#mailtm.core.methods.MessageMethods.GET_ALL_MESSAGES","title":"GET_ALL_MESSAGES  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_ALL_MESSAGES = 'messages'\n</code></pre> <p>Retrieves all messages.</p>"},{"location":"references/methods/#mailtm.core.methods.MessageMethods.GET_MESSAGE_BY_ID","title":"GET_MESSAGE_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_MESSAGE_BY_ID = 'messages/{id}'\n</code></pre> <p>Retrieves a message by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.MessageMethods.DELETE_MESSAGE_BY_ID","title":"DELETE_MESSAGE_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>DELETE_MESSAGE_BY_ID = 'messages/{id}'\n</code></pre> <p>Deletes a message by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.MessageMethods.PATCH_MESSAGE_BY_ID","title":"PATCH_MESSAGE_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>PATCH_MESSAGE_BY_ID = 'messages/{id}'\n</code></pre> <p>Updates a message by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.MessageMethods.GET_SOURCES_BY_ID","title":"GET_SOURCES_BY_ID  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>GET_SOURCES_BY_ID = 'sources/{id}'\n</code></pre> <p>Retrieves sources for a message by ID.</p>"},{"location":"references/methods/#mailtm.core.methods.ServerAuth","title":"ServerAuth  <code>dataclass</code>","text":"<pre><code>ServerAuth(\n    account_token: str,\n    account_id: str,\n    account_address: t.Optional[str] = None,\n    account_password: t.Optional[str] = None,\n)\n</code></pre> <p>A data class to authenticate with the server-client for Server Implementation.</p>"},{"location":"references/methods/#mailtm.core.methods.ServerAuth.account_token","title":"account_token  <code>instance-attribute</code>","text":"<pre><code>account_token: str\n</code></pre> <p>The token of the account.</p>"},{"location":"references/methods/#mailtm.core.methods.ServerAuth.account_id","title":"account_id  <code>instance-attribute</code>","text":"<pre><code>account_id: str\n</code></pre> <p>The ID of the account.</p>"},{"location":"references/methods/#mailtm.core.methods.ServerAuth.account_address","title":"account_address  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_address: t.Optional[str] = None\n</code></pre> <p>The address of the account.</p>"},{"location":"references/methods/#mailtm.core.methods.ServerAuth.account_password","title":"account_password  <code>class-attribute</code> <code>instance-attribute</code>","text":"<pre><code>account_password: t.Optional[str] = None\n</code></pre> <p>The password of the account.</p>"},{"location":"references/methods/#mailtm.core.methods.AttachServer","title":"AttachServer  <code>dataclass</code>","text":"<pre><code>AttachServer(server: MailServerBase)\n</code></pre> <p>This contains an internal server instance to perform methods inherited from the server.</p>"},{"location":"references/pullers/","title":"\u26a1 Pullers","text":"<p>This module contains all the classes and functions that make HTTP requests to the Mail.TM API (client- less). It is divided into two main classes: </p> <ul> <li>get      which is a synchronous class</li> <li>xget     which is an asynchronous class.</li> </ul> <p>Each class has methods that correspond to the API endpoints.</p> <ul> <li>These methods will take the necessary parameters and make a request to the corresponding endpoint.</li> <li>The methods will return the response of the API in the form of a type hinteded object. </li> <li>If the method returns <code>None</code>, it means that the request failed and the error is not explicitly handled by the method.</li> </ul> <p>The methods of <code>xget</code> return <code>None</code> and the error is handled by the method itself, so you don't need to handle it.</p> <p>All the methods in this module make requests to the API.</p> <p>The methods in this module are also documented here.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get","title":"get","text":"<pre><code>get()\n</code></pre> <p>A synchronous implementation which handles data client-less (without making a session).</p> Synchronous <p>Gets an out-of-client class that helps to fetch data regardless of account token. But this won't include all the data that is available in the API. It only pulls the data that is avilable without authentication using headers.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get.create_account","title":"create_account","text":"<pre><code>create_account(\n    address: str, password: str\n) -&gt; t.Optional[Account]\n</code></pre> <p>Creates an account.</p> PARAMETER DESCRIPTION <code>address</code> <p>The email address of the new account.</p> <p> TYPE: <code>str</code> </p> <code>password</code> <p>The password for the new account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The newly created account object if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get.get_account","title":"get_account","text":"<pre><code>get_account(account_id: str) -&gt; t.Optional[Account]\n</code></pre> <p>Gets an account using ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The account object if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get.delete_account","title":"delete_account","text":"<pre><code>delete_account(account_id: str) -&gt; bool\n</code></pre> <p>Deletes an account using ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to delete.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>bool</code> <p>True if successful, False otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get.get_account_token","title":"get_account_token","text":"<pre><code>get_account_token(\n    account_address: str, account_password: str\n) -&gt; t.Optional[Token]\n</code></pre> <p>Get an account token which is used by the clients.</p> PARAMETER DESCRIPTION <code>account_address</code> <p>The email address of the account.</p> <p> TYPE: <code>str</code> </p> <code>account_password</code> <p>The password of the account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Token]</code> <p>The account token if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get.get_domain","title":"get_domain","text":"<pre><code>get_domain(domain_id: str) -&gt; t.Optional[Domain]\n</code></pre> <p>Get a specific domain with ID.</p> PARAMETER DESCRIPTION <code>domain_id</code> <p>The ID of the domain to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Domain]</code> <p>The domain with the ID provided. If not found, returns None.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.get.get_domains","title":"get_domains","text":"<pre><code>get_domains() -&gt; t.Optional[DomainPageView]\n</code></pre> <p>Get all domains.</p> RETURNS DESCRIPTION <code>Optional[DomainPageView]</code> <p>The domain page view if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.xget","title":"xget","text":"<pre><code>xget()\n</code></pre> <p>An asynchronous implementation which handles data client-less (without making a session).</p> Asynchronous <p>Gets an out-of-client class that helps to fetch data regardless of account token. But this won't include all the data that is available in the API. It only pulls the data that is avilable without authentication using headers.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.xget.create_account","title":"create_account  <code>async</code>","text":"<pre><code>create_account(\n    address: str, password: str\n) -&gt; t.Optional[Account]\n</code></pre> <p>Creates an account.</p> PARAMETER DESCRIPTION <code>address</code> <p>The email address of the new account.</p> <p> TYPE: <code>str</code> </p> <code>password</code> <p>The password for the new account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The newly created account object if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.xget.get_account","title":"get_account  <code>async</code>","text":"<pre><code>get_account(account_id: str) -&gt; t.Optional[Account]\n</code></pre> <p>Gets an account using ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The account object if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.xget.delete_account","title":"delete_account  <code>async</code>","text":"<pre><code>delete_account(account_id: str) -&gt; None\n</code></pre> <p>Deletes an account using ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to delete.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"references/pullers/#mailtm.impls.pullers.xget.get_account_token","title":"get_account_token  <code>async</code>","text":"<pre><code>get_account_token(\n    account_address: str, account_password: str\n) -&gt; t.Optional[Token]\n</code></pre> <p>Get an account token which is used by the clients.</p> PARAMETER DESCRIPTION <code>account_address</code> <p>The email address of the account.</p> <p> TYPE: <code>str</code> </p> <code>account_password</code> <p>The password of the account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Token]</code> <p>The account token if successful, None otherwise.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.xget.get_domain","title":"get_domain  <code>async</code>","text":"<pre><code>get_domain(domain_id: str) -&gt; t.Optional[Domain]\n</code></pre> <p>Get a specific domain with ID.</p> PARAMETER DESCRIPTION <code>domain_id</code> <p>The ID of the domain to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Domain]</code> <p>The domain with the ID provided. If not found, returns None.</p>"},{"location":"references/pullers/#mailtm.impls.pullers.xget.get_domains","title":"get_domains  <code>async</code>","text":"<pre><code>get_domains() -&gt; t.Optional[DomainPageView]\n</code></pre> <p>Get all domains.</p> RETURNS DESCRIPTION <code>Optional[DomainPageView]</code> <p>The domain page view if successful, None otherwise.</p>"},{"location":"references/sync-client/","title":"\u26a1Synchronous Mail Client implementation.","text":"<p>This module provides a synchronous client for the Mail.TM API.</p> <ul> <li>The client can be used to fetch data from the API, including account information, domain information, and messages.</li> <li>The client uses the 'requests' library to make HTTP requests to the API and the 'msgspec' library to decode the JSON responses from the API into Python objects.</li> <li>The client is easy to use and is designed to be used in a synchronous application.</li> <li>The API is documented at Mail.tm Documentation</li> </ul> You don't have to worry about: <ul> <li>The client automatically handles errors and exceptions, so you don't have to.</li> <li>The client also handles rate limits, so you don't have to.</li> </ul> You do have to worry about: <ul> <li>The client does not handle connection limits, so you might have to.</li> <li>The client does not handle SSL verification, so you might have to.</li> </ul>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail","title":"SyncMail","text":"<pre><code>SyncMail(account_token: t.Optional[Token] = None)\n</code></pre> <p>Synchronous client for the Mail.TM API.</p> PARAMETER DESCRIPTION <code>account_token</code> <p>The account token to use for authentication. If not provided, the client will not be authenticated.</p> <p> TYPE: <code>t.Optional[Token]</code> DEFAULT: <code>None</code> </p> Example <pre><code>from mailtm import SyncMail\n\nwith SyncMail() as client:\n    account = client.get_me()\n    print(account)\n</code></pre>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_me","title":"get_me","text":"<pre><code>get_me() -&gt; t.Optional[Account]\n</code></pre> <p>Gets the authenticated account.</p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The account or None if the account is not authenticated.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_domains","title":"get_domains","text":"<pre><code>get_domains() -&gt; t.Optional[DomainPageView]\n</code></pre> <p>Get a page view of domains available under the account token provided to create a session.</p> RETURNS DESCRIPTION <code>Optional[DomainPageView]</code> <p>A page view of domains available under the account token provided to create a session. If not authenticated, returns None.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_domain","title":"get_domain","text":"<pre><code>get_domain(domain_id: str) -&gt; t.Optional[Domain]\n</code></pre> <p>Get a specific domain with ID.</p> PARAMETER DESCRIPTION <code>domain_id</code> <p>The ID of the domain to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Domain]</code> <p>The domain with the ID provided. If not found, returns None.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_account","title":"get_account","text":"<pre><code>get_account(account_id: str) -&gt; t.Optional[Account]\n</code></pre> <p>Get an accnount by it's ID.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The account with the ID provided. If not found, returns None.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.create_account","title":"create_account","text":"<pre><code>create_account(\n    address: str, password: str\n) -&gt; t.Optional[Account]\n</code></pre> <p>Creates an account.</p> PARAMETER DESCRIPTION <code>address</code> <p>The email address of the new account.</p> <p> TYPE: <code>str</code> </p> <code>password</code> <p>The password for the new account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The newly created account object if successful, None otherwise.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.delete_account","title":"delete_account","text":"<pre><code>delete_account(account_id: t.Optional[str] = None) -&gt; None\n</code></pre> <p>Deletes an account.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to delete. If not provided, the account token will be used to delete the account.</p> <p> TYPE: <code>t.Optional[str]</code> DEFAULT: <code>None</code> </p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_messages","title":"get_messages","text":"<pre><code>get_messages(page: int = 1) -&gt; t.Optional[MessagePageView]\n</code></pre> <p>Get a page view of messages available under the account token provided to create a session.</p> PARAMETER DESCRIPTION <code>page</code> <p>The page number to get. Defaults to 1.</p> <p> TYPE: <code>int</code> DEFAULT: <code>1</code> </p> RETURNS DESCRIPTION <code>Optional[MessagePageView]</code> <p>A page view of messages available under the account token provided to create a session. If not authenticated, returns None.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_message","title":"get_message","text":"<pre><code>get_message(message_id: str) -&gt; t.Optional[Message]\n</code></pre> <p>Get a specific message with ID.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Message]</code> <p>The message with the ID provided. If not found, returns None.</p>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.delete_message","title":"delete_message","text":"<pre><code>delete_message(message_id: str) -&gt; None\n</code></pre> <p>Delete a specific message with ID.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to delete.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.mark_as_seen","title":"mark_as_seen","text":"<pre><code>mark_as_seen(message_id: str) -&gt; None\n</code></pre> <p>Flag a message as seen.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to mark as seen.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"references/sync-client/#mailtm.impls.client.SyncMail.get_source","title":"get_source","text":"<pre><code>get_source(source_id: str) -&gt; t.Optional[Source]\n</code></pre> <p>Get source by the source ID.</p> PARAMETER DESCRIPTION <code>source_id</code> <p>The ID of the source to get.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Source]</code> <p>The source with the ID provided. If not found, returns None.</p>"},{"location":"server/events/","title":"\u26a1Server Events","text":"<p>\ud83d\ude80 Events are designed for handling server-related tasks, with a total of 8 events created specifically for this purpose. These events are dispatched to decorators that are subscribed to them.</p> <p>Note</p> <p>You are sought to not change or create a custom event, since it still needs to be tested. Without testing, the execution of a custom event might cause problems that server implementations may not be able to deal it causing the server to eventually die.</p>"},{"location":"server/events/#events","title":"\ud83d\ude80 Events","text":"<p>Module for events that get triggered in the Mail.tm server.</p> <p>This module contains a set of classes representing different events that get triggered in the <code>Mail.tm</code> server. These events can be used to create callbacks for when certain actions happen in the server.</p> <ul> <li><code>NewMessage</code>: Triggered when a new message is received.</li> <li><code>MessageDelete</code>: Triggered when a message is deleted using the server instance.</li> <li><code>DomainChange</code>: Triggered when the email domain is changed.</li> <li><code>AccountSwitched</code>: Triggered when the account is switched to a different account.</li> <li><code>NewAccountCreated</code>: Triggered when a new account is created.</li> <li><code>AccountDeleted</code>: Triggered when an account is deleted.</li> <li><code>ServerStarted</code>: Triggered when the server is started.</li> <li><code>ServerCalledOff</code>: Triggered when the server is ended.</li> </ul>"},{"location":"server/events/#mailtm.server.events.BaseEvent","title":"BaseEvent","text":"<pre><code>BaseEvent(\n    event: str, client: AsyncMail, _server: AttachServer\n)\n</code></pre> <p>Represents a set of Discord UI components attached to a message.</p> PARAMETER DESCRIPTION <code>event</code> <p>A string attached to the BaseEvent that represents the event.</p> <p> TYPE: <code>str</code> </p> <code>client</code> <p>An instance AsyncMail that represents the client. You can use this to operate the interactions with the AsyncClient</p> <p> TYPE: <code>AsyncMail</code> </p> <code>_server</code> <p>This is not supposed to be used by the user. This attaches a server instance to dispatch events within from events.</p> <p> TYPE: <code>AttachServer</code> </p>"},{"location":"server/events/#mailtm.server.events.BaseEvent.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.BaseEvent.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.BaseEvent.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.NewMessage","title":"NewMessage","text":"<pre><code>NewMessage(\n    event: str,\n    client: AsyncMail,\n    _server: AttachServer,\n    new_message: Message,\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when a message is received.</p> PARAMETER DESCRIPTION <code>new_message</code> <p>The message that was received.</p> <p> TYPE: <code>Message</code> </p>"},{"location":"server/events/#mailtm.server.events.NewMessage.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.NewMessage.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.NewMessage.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.NewMessage.new_message","title":"new_message  <code>property</code>","text":"<pre><code>new_message: Message\n</code></pre> <p>The new message that was received from the server.</p> RETURNS DESCRIPTION <code>Message</code> <p>An instance of Message which includes the details about message received from the server.</p>"},{"location":"server/events/#mailtm.server.events.NewMessage.delete_message","title":"delete_message  <code>async</code>","text":"<pre><code>delete_message() -&gt; None\n</code></pre> <p>Delete the message from the Mail Box.</p>"},{"location":"server/events/#mailtm.server.events.NewMessage.mark_as_seen","title":"mark_as_seen  <code>async</code>","text":"<pre><code>mark_as_seen() -&gt; None\n</code></pre> <p>Flag the message as seen.</p>"},{"location":"server/events/#mailtm.server.events.MessageDelete","title":"MessageDelete","text":"<pre><code>MessageDelete(\n    event: str,\n    client: AsyncMail,\n    deleted_message: Message,\n    _server: AttachServer,\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when a message  gets deleted using the server instance. Note: This won't get triggered if the client is used to delete any message</p> PARAMETER DESCRIPTION <code>deleted_message</code> <p>The message that was deleted.</p> <p> TYPE: <code>Message</code> </p>"},{"location":"server/events/#mailtm.server.events.MessageDelete.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.MessageDelete.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.MessageDelete.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.MessageDelete.deleted_message","title":"deleted_message  <code>property</code>","text":"<pre><code>deleted_message: Message\n</code></pre> <p>The message that was deleted.</p> RETURNS DESCRIPTION <code>Message</code> <p>The message that was deleted.</p>"},{"location":"server/events/#mailtm.server.events.DomainChange","title":"DomainChange","text":"<pre><code>DomainChange(\n    new_domain: Domain,\n    event: str,\n    client: AsyncMail,\n    _server: AttachServer,\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when the email domain is changed.</p> Parameter <p>new_domain : Domain     The new domain that was set.</p>"},{"location":"server/events/#mailtm.server.events.DomainChange.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.DomainChange.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.DomainChange.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.DomainChange.new_domain","title":"new_domain  <code>property</code>","text":"<pre><code>new_domain: Domain\n</code></pre> <p>The domain that got changed.</p> RETURNS DESCRIPTION <code>Domain</code> <p>A domain that was changed</p>"},{"location":"server/events/#mailtm.server.events.AccountSwitched","title":"AccountSwitched","text":"<pre><code>AccountSwitched(\n    event: str,\n    client: AsyncMail,\n    _server: AttachServer,\n    last_account_auth: ServerAuth,\n    new_account_auth: ServerAuth,\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when the account is switched to a different account.</p> Parameter <p>last_account_auth: ServerAuth     An instance of ServerAuth that represents the last account.</p> <p>new_account_auth: ServerAuth     An instance of ServerAuth that represents the new account.</p>"},{"location":"server/events/#mailtm.server.events.AccountSwitched.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.AccountSwitched.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.AccountSwitched.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.AccountSwitched.last_account_auth","title":"last_account_auth  <code>property</code>","text":"<pre><code>last_account_auth: ServerAuth\n</code></pre> <p>Get the ServerAuth of the last account.</p> Returns: <p>ServerAuth     An instance of ServerAuth that represents the last account.</p>"},{"location":"server/events/#mailtm.server.events.AccountSwitched.new_account_auth","title":"new_account_auth  <code>property</code>","text":"<pre><code>new_account_auth: ServerAuth\n</code></pre> <p>The server authentication related to the new account.</p> RETURNS DESCRIPTION <code>ServerAuth</code> <p>An instance representing the details used in server authentication.</p> <p> TYPE: <code>ServerAuth</code> </p>"},{"location":"server/events/#mailtm.server.events.NewAccountCreated","title":"NewAccountCreated","text":"<pre><code>NewAccountCreated(\n    new_account_auth: ServerAuth,\n    new_account: Account,\n    event: str,\n    client: AsyncMail,\n    _server: AttachServer,\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when a new account is created.</p> PARAMETER DESCRIPTION <code>new_account_auth</code> <p>An instance of ServerAuth that represents the new account.</p> <p> TYPE: <code>ServerAuth</code> </p> <code>new_account</code> <p>An instance of Account that represents the new account.</p> <p> TYPE: <code>Account</code> </p>"},{"location":"server/events/#mailtm.server.events.NewAccountCreated.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.NewAccountCreated.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.NewAccountCreated.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.NewAccountCreated.new_account_auth","title":"new_account_auth  <code>property</code>","text":"<pre><code>new_account_auth: ServerAuth\n</code></pre> <p>The server authentication related to the new account.</p> RETURNS DESCRIPTION <code>ServerAuth</code> <p>An instance representing the details used in server authentication.</p> <p> TYPE: <code>ServerAuth</code> </p>"},{"location":"server/events/#mailtm.server.events.NewAccountCreated.new_account","title":"new_account  <code>property</code>","text":"<pre><code>new_account: Account\n</code></pre> <p>The new account that was created.</p> RETURNS DESCRIPTION <code>Account</code> <p>An instance of Account that represents the new account.</p>"},{"location":"server/events/#mailtm.server.events.AccountDeleted","title":"AccountDeleted","text":"<pre><code>AccountDeleted(\n    event: str,\n    client: AsyncMail,\n    _server: AttachServer,\n    deleted_account_auth: ServerAuth,\n    deleted_account: Account,\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when an account is deleted.</p> PARAMETER DESCRIPTION <code>deleted_account_auth</code> <p>An instance of ServerAuth that represents the deleted account.</p> <p> TYPE: <code>ServerAuth</code> </p> <code>deleted_account</code> <p>An instance of Account that represents the deleted account.</p> <p> TYPE: <code>Account</code> </p>"},{"location":"server/events/#mailtm.server.events.AccountDeleted.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.AccountDeleted.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.AccountDeleted.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.AccountDeleted.deleted_account_auth","title":"deleted_account_auth  <code>property</code>","text":"<pre><code>deleted_account_auth: ServerAuth\n</code></pre> <p>The server authentication related to the deleted account.</p> RETURNS DESCRIPTION <code>ServerAuth</code> <p>An instance representing the details used in server authentication.</p> <p> TYPE: <code>ServerAuth</code> </p>"},{"location":"server/events/#mailtm.server.events.AccountDeleted.deleted_account","title":"deleted_account  <code>property</code>","text":"<pre><code>deleted_account: Account\n</code></pre> <p>The account that was deleted.</p> RETURNS DESCRIPTION <code>Account</code> <p>An instance of Account that represents the deleted account.</p>"},{"location":"server/events/#mailtm.server.events.ServerStarted","title":"ServerStarted","text":"<pre><code>ServerStarted(\n    event: str, client: AsyncMail, _server: AttachServer\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when the server is started.</p>"},{"location":"server/events/#mailtm.server.events.ServerStarted.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.ServerStarted.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.ServerStarted.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/events/#mailtm.server.events.ServerCalledOff","title":"ServerCalledOff","text":"<pre><code>ServerCalledOff(\n    event: str, client: AsyncMail, _server: AttachServer\n)\n</code></pre> <p>             Bases: <code>BaseEvent</code></p> <p>Event triggered when the server is ended.</p>"},{"location":"server/events/#mailtm.server.events.ServerCalledOff.client","title":"client  <code>property</code>","text":"<pre><code>client: AsyncMail\n</code></pre> <p>Client attached to the server context.</p> RETURNS DESCRIPTION <code>AsyncMail</code> <p>an instance of AsyncMail attached to the server in the context of the interaction.</p>"},{"location":"server/events/#mailtm.server.events.ServerCalledOff.server","title":"server  <code>property</code>","text":"<pre><code>server: AttachServer\n</code></pre> <p>An instance of AttachServer, which basically has the MailServer attached to it.</p> RETURNS DESCRIPTION <code>AttachServer</code> <p>an instance of AttachServer, which can be used like <code>AttachServer.server</code>. This contains <code>MailServer</code>.</p>"},{"location":"server/events/#mailtm.server.events.ServerCalledOff.event","title":"event  <code>property</code>","text":"<pre><code>event: str\n</code></pre> <p>The event string associated with the dispatched class.</p> RETURNS DESCRIPTION <code>str</code> <p>The event string associated with the dispatched class</p>"},{"location":"server/implementation/","title":"\u26a1Mail Server implementation","text":"Should we reconsider our implementation method to align with the webhooks approach detailed in the documentation at mail.tm <p>Given the documentation at mail.tm, I've explored the possibility of implementing webhooks for our project. However,</p> <ul> <li>It appears that the webhooks utilize SSE (Server-Sent Events) instead of conventional webhook captures for real-time event updates.</li> <li>Unfortunately, due to the absence of reliable SSE client implementations in Python, the current implementation stands as the most suitable approach for now.</li> </ul>"},{"location":"server/implementation/#mail-server-base-implementation","title":"\u26a1Mail Server Base Implementation","text":"<p>Note</p> <p>Just below this text, lies the Base implementation of MailServer. You should never use this to create a MailServer instance directly. Instead you should choose MailServer</p>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase","title":"MailServerBase","text":"<pre><code>MailServerBase(\n    server_auth: ServerAuth,\n    pooling_rate: t.Optional[int],\n    banner: t.Optional[bool] = True,\n    banner_path: t.Optional[\n        t.Union[pathlib.Path, str]\n    ] = default_banner,\n    suppress_errors: t.Optional[bool] = False,\n    enable_logging: t.Optional[bool] = False,\n)\n</code></pre> <p>Stellar Addition - Custom MailServer.</p> <p>This script sets up a pooling-based server that checks the API every second for new events. When a difference is detected, the corresponding event is dispatched, allowing you to respond dynamically to incoming messages. In addition to the core SDK functionalities, this package offers an additional layer of scripts designed to handle clients in an event-driven manner, reminiscent of frameworks like <code>discord.py</code> or <code>hikari</code>. With this SDK, you gain access to a client that dispatches events seamlessly.</p> PARAMETER DESCRIPTION <code>server_auth</code> <p>The server authentication details.</p> <p> TYPE: <code>ServerAuth</code> </p> <code>pooling_rate</code> <p>The pooling rate in seconds. If not provided, the default pooling rate will be used.</p> <p> TYPE: <code>Optional[int]</code> </p> <code>banner</code> <p>Whether to display a banner upon initialization. Defaults to True.</p> <p> TYPE: <code>Optional[bool]</code> DEFAULT: <code>True</code> </p> <code>banner_path</code> <p>The path to the banner file. Defaults to the default banner file.</p> <p> TYPE: <code>Optional[Union[Path, str]]</code> DEFAULT: <code>default_banner</code> </p> <code>suppress_errors</code> <p>Whether to suppress errors. Defaults to False.</p> <p> TYPE: <code>Optional[bool]</code> DEFAULT: <code>False</code> </p> <code>enable_logging</code> <p>Whether to enable logging. Defaults to False.</p> <p> TYPE: <code>Optional[bool]</code> DEFAULT: <code>False</code> </p> Example <pre><code>import mailtm\nserver = mailtm.MailServer(\n    server_auth=ServerAuth(\n        account_id=\"...\",  # Your account ID.\n        account_token=\"...\",  # Your account token.\n    )\n)\n# Define an event handler for new messages\n# The stand-alone decorators should be used\n# without the brackets since we provide no\n# function to handle, and append with the\n# handler.\n@server.on_new_message\nasync def event(event: NewMessage):\n    print(event.new_message.text)\n# Start the event loop\nserver.run()\n</code></pre>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.log","title":"log","text":"<pre><code>log(\n    message: str,\n    severity: t.Literal[\n        \"INFO\", \"WARNING\", \"ERROR\"\n    ] = \"INFO\",\n) -&gt; None\n</code></pre> <p>Logs the message to the console with the corresponding severity.</p> PARAMETER DESCRIPTION <code>message</code> <p>The message to log.</p> <p> TYPE: <code>str</code> </p> <code>severity</code> <p>The severity of the message. Defaults to INFO.</p> <p> TYPE: <code>Literal[INFO, WARNING, ERROR]</code> DEFAULT: <code>'INFO'</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.subscribe","title":"subscribe","text":"<pre><code>subscribe(\n    event_type: t.Type[BaseEvent],\n) -&gt; t.Callable[\n    [t.Callable[[ServerSideEvents], t.Awaitable[None]]],\n    t.Callable[[ServerSideEvents], t.Awaitable[None]],\n]\n</code></pre> <p>Decorator to subscribe a function to handle server events.</p> PARAMETER DESCRIPTION <code>event_type</code> <p>The type of event to subscribe to.</p> <p> TYPE: <code>Type[BaseEvent]</code> </p> RETURNS DESCRIPTION <code>Callable</code> <p>The decorated function.</p> Example <pre><code>@server.subscribe(ServerSideEvents.NewMessage)\nasync def event(event: ServerSideEvents.NewMessage):\n    print(event.new_message.text)\n</code></pre>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.on_new_message","title":"on_new_message","text":"<pre><code>on_new_message(\n    func: t.Callable[[NewMessage], t.Awaitable[None]]\n)\n</code></pre> <p>Registers a callback function to handle new messages.</p> PARAMETER DESCRIPTION <code>func</code> <p>The callback function to handle new messages.</p> <p> TYPE: <code>Callable[[NewMessage], Awaitable[None]]</code> </p> RETURNS DESCRIPTION <code>The result of the extracted function call.</code>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.on_new_domain","title":"on_new_domain","text":"<pre><code>on_new_domain(\n    func: t.Callable[[DomainChange], t.Awaitable[None]]\n)\n</code></pre> <p>Registers a callback function to handle new domains.</p> PARAMETER DESCRIPTION <code>func</code> <p>The callback function to handle new domains.</p> <p> TYPE: <code>Callable[[DomainChange], Awaitable[None]]</code> </p> RETURNS DESCRIPTION <code>The result of the extracted function call.</code>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.dispatch","title":"dispatch  <code>async</code>","text":"<pre><code>dispatch(event: BaseEvent) -&gt; None\n</code></pre> <p>Asynchronously dispatches the given event to the appropriate handlers.</p> <p>Args:     self: The MailServerBase instance.     event (BaseEvent): The event to dispatch.</p> <p>Returns:     None</p>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.shutdown","title":"shutdown  <code>async</code>","text":"<pre><code>shutdown() -&gt; None\n</code></pre> <p>Calls the shutdown method on the MailClient instance and dispatches the ServerCalledOff event.</p> <p>Returns:     None</p>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.runner","title":"runner  <code>async</code>","text":"<pre><code>runner() -&gt; None\n</code></pre> <p>This function is responsible for executing the main server logic. It starts a session and continuously polls the API for new events. When a difference is detected, the corresponding event is dispatched. The function runs in an infinite loop until it is interrupted by a keyboard interrupt.</p> RAISES DESCRIPTION <code>    Exception</code> <p>If no events have been subscribed to.</p>"},{"location":"server/implementation/#mailtm.server.srv.MailServerBase.run","title":"run","text":"<pre><code>run() -&gt; None\n</code></pre> <p>Executes the main server logic by running the event runner within asyncio event loop.</p>"},{"location":"server/implementation/#the-mail-server","title":"\u26a1The Mail Server","text":""},{"location":"server/implementation/#mailtm.server.impl.MailServer","title":"MailServer","text":"<pre><code>MailServer(\n    server_auth: ServerAuth,\n    pooling_rate: int | None,\n    banner: bool | None = True,\n    banner_path: pathlib.Path | str | None = default_banner,\n    suppress_errors: bool | None = False,\n    enable_logging: bool | None = False,\n)\n</code></pre> <p>             Bases: <code>MailServerBase</code></p>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.log","title":"log","text":"<pre><code>log(\n    message: str,\n    severity: t.Literal[\n        \"INFO\", \"WARNING\", \"ERROR\"\n    ] = \"INFO\",\n) -&gt; None\n</code></pre> <p>Logs the message to the console with the corresponding severity.</p> PARAMETER DESCRIPTION <code>message</code> <p>The message to log.</p> <p> TYPE: <code>str</code> </p> <code>severity</code> <p>The severity of the message. Defaults to INFO.</p> <p> TYPE: <code>Literal[INFO, WARNING, ERROR]</code> DEFAULT: <code>'INFO'</code> </p> RETURNS DESCRIPTION <code>None</code>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.subscribe","title":"subscribe","text":"<pre><code>subscribe(\n    event_type: t.Type[BaseEvent],\n) -&gt; t.Callable[\n    [t.Callable[[ServerSideEvents], t.Awaitable[None]]],\n    t.Callable[[ServerSideEvents], t.Awaitable[None]],\n]\n</code></pre> <p>Decorator to subscribe a function to handle server events.</p> PARAMETER DESCRIPTION <code>event_type</code> <p>The type of event to subscribe to.</p> <p> TYPE: <code>Type[BaseEvent]</code> </p> RETURNS DESCRIPTION <code>Callable</code> <p>The decorated function.</p> Example <pre><code>@server.subscribe(ServerSideEvents.NewMessage)\nasync def event(event: ServerSideEvents.NewMessage):\n    print(event.new_message.text)\n</code></pre>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.on_new_message","title":"on_new_message","text":"<pre><code>on_new_message(\n    func: t.Callable[[NewMessage], t.Awaitable[None]]\n)\n</code></pre> <p>Registers a callback function to handle new messages.</p> PARAMETER DESCRIPTION <code>func</code> <p>The callback function to handle new messages.</p> <p> TYPE: <code>Callable[[NewMessage], Awaitable[None]]</code> </p> RETURNS DESCRIPTION <code>The result of the extracted function call.</code>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.on_new_domain","title":"on_new_domain","text":"<pre><code>on_new_domain(\n    func: t.Callable[[DomainChange], t.Awaitable[None]]\n)\n</code></pre> <p>Registers a callback function to handle new domains.</p> PARAMETER DESCRIPTION <code>func</code> <p>The callback function to handle new domains.</p> <p> TYPE: <code>Callable[[DomainChange], Awaitable[None]]</code> </p> RETURNS DESCRIPTION <code>The result of the extracted function call.</code>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.dispatch","title":"dispatch  <code>async</code>","text":"<pre><code>dispatch(event: BaseEvent) -&gt; None\n</code></pre> <p>Asynchronously dispatches the given event to the appropriate handlers.</p> <p>Args:     self: The MailServerBase instance.     event (BaseEvent): The event to dispatch.</p> <p>Returns:     None</p>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.run","title":"run","text":"<pre><code>run() -&gt; None\n</code></pre> <p>Executes the main server logic by running the event runner within asyncio event loop.</p>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.create_account","title":"create_account  <code>async</code>","text":"<pre><code>create_account(\n    account_address: str, account_password: str\n) -&gt; t.Optional[Account]\n</code></pre> <p>Creates a new account with the given email address and password.</p> PARAMETER DESCRIPTION <code>account_address</code> <p>The email address of the new account.</p> <p> TYPE: <code>str</code> </p> <code>account_password</code> <p>The password for the new account.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>Optional[Account]</code> <p>The newly created account object if successful, None otherwise.</p>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.delete_message","title":"delete_message  <code>async</code>","text":"<pre><code>delete_message(message_id: str) -&gt; None\n</code></pre> <p>Deletes a message from the Mail Box.</p> PARAMETER DESCRIPTION <code>message_id</code> <p>The ID of the message to be deleted.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>    None</code>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.switch_account","title":"switch_account  <code>async</code>","text":"<pre><code>switch_account(\n    new_account_token: t.Union[Token, str]\n) -&gt; None\n</code></pre> <p>Switches to a new account.</p> PARAMETER DESCRIPTION <code>new_account_token</code> <p>The new account token to switch to.</p> <p> TYPE: <code>t.Union[Token, str]</code> </p> RETURNS DESCRIPTION <code>    None</code>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.delete_account","title":"delete_account  <code>async</code>","text":"<pre><code>delete_account(account_id: str) -&gt; None\n</code></pre> <p>Deletes an account.</p> PARAMETER DESCRIPTION <code>account_id</code> <p>The ID of the account to be deleted.</p> <p> TYPE: <code>str</code> </p> RETURNS DESCRIPTION <code>    None</code>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.shutdown","title":"shutdown  <code>async</code>","text":"<pre><code>shutdown() -&gt; None\n</code></pre> <p>Calls the shutdown method on the MailClient instance and dispatches the ServerCalledOff event.</p> <p>Returns:     None</p>"},{"location":"server/implementation/#mailtm.server.impl.MailServer.runner","title":"runner  <code>async</code>","text":"<pre><code>runner() -&gt; None\n</code></pre> <p>This function is responsible for executing the main server logic. It starts a session and continuously polls the API for new events. When a difference is detected, the corresponding event is dispatched. The function runs in an infinite loop until it is interrupted by a keyboard interrupt.</p> RAISES DESCRIPTION <code>    Exception</code> <p>If no events have been subscribed to.</p>"},{"location":"server/limitations/","title":"\u26a1Limitations of the server implmentation.","text":"<p>\ud83d\ude80 Well, since the server implementation is not documented in the official documentation of Mail.tm, and is a locally made feature underlying the SDK, it is bound to be having certain limitations along with it.</p>"},{"location":"server/limitations/#ratelimiting","title":"\u26a1Ratelimiting","text":"<p>\ud83d\ude80 Handling rate-limit errors manually is currently necessary since predicting the exact timing of these errors is challenging. However, we're considering developing a more efficient method to manage rate limits, especially when making multiple API calls for event monitoring.</p>"},{"location":"server/limitations/#random-crashes","title":"\u26a1Random Crashes","text":"<p>\ud83d\ude80 Mail.tm currently lacks support for providing advance notification of service denial before implementing temporary downtime. Consequently, predicting when the server might randomly go offline is not feasible.</p>"},{"location":"server/limitations/#not-really-real-time","title":"\u26a1Not really real-time","text":"<p>\ud83d\ude80 While the current implementation involves calling the API every second to monitor for changes, it's important to note that the API response consistently experiences a delay. On average, new messages are detected approximately 20 seconds after their arrival on the mail.tm website. Thus, the system's real-time capabilities are somewhat limited due to this delay.</p>"},{"location":"server/server/","title":"\u26a1Mail Server","text":"<p>\ud83d\ude80 This package not only encompasses fundamental SDK functionalities but also integrates an additional layer of scripts tailored specifically for managing clients in an event-driven fashion, reminiscent of popular frameworks such as discord.py or hikari. By utilizing this SDK, you gain access to a client that seamlessly dispatches events, enhancing the overall functionality and versatility of your application.</p>"},{"location":"server/server/#sample-usage","title":"\u26a1 Sample Usage:","text":"<pre><code>import mailtm\nfrom mailtm.abc import ServerAuth\n\nserver = mailtm.MailServer(\n    server_auth=ServerAuth(\n        account_id=\"...\",\n        account_token=\"...\",\n    )\n)\n\n@server.on_new_message\nasync def handle_new_message(event: NewMessage):\n    print(event.new_message.text)\n\nserver.run()\n</code></pre>"},{"location":"server/server/#understanding-the-execution","title":"\u26a1Understanding the execution","text":"<p>After importing the Server module,</p> <ul> <li>\ud83d\ude80 The mailtm.MailServer creates a server instance to receive new messages.</li> <li>\ud83d\ude80 The server_auth parameter requires details of the client for initiating API call pooling. This parameter should be passed with ServerAuth.</li> <li>\ud83d\ude80 Subsequently, the server's main body is implemented.</li> <li>\ud83d\ude80 Since this server-like implementation relies solely on event dispatches, two types of decorators are provided to subscribe to any event.</li> <li>\ud83d\ude80 The <code>.run()</code> function is used to execute the server through asynchronous loops.</li> </ul>"}]}